# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/python@5.16.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AnnotationContentType(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    TEXT = "text"
    INTEGER = "integer"
    FLOAT = "float"
    DECIMAL = "decimal"
    DATE = "date"
    DATETIME = "datetime"
    BOOLEAN = "boolean"
    ENUM = "enum"
    LOCATION = "location"
    JSON = "json"
    TABLE = "table"
    CELL = "cell"
    EXPECTEDREMUNERATION = "expectedremuneration"
    JOBTITLE = "jobtitle"
    LANGUAGE = "language"
    SKILL = "skill"
    YEARSEXPERIENCE = "yearsexperience"
    GROUP = "group"


class CollectionDateFormatPreference(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    DMY = "DMY"
    MDY = "MDY"
    YMD = "YMD"


class DateFormatPreference(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    DMY = "DMY"
    MDY = "MDY"
    YMD = "YMD"


class DateRange(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    TODAY = "today"
    YESTERDAY = "yesterday"
    WEEK = "week"
    MONTH = "month"
    YEAR = "year"


class DocumentFormat(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    JSON = "json"
    XML = "xml"
    HR_XML = "hr-xml"


class DocumentState(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    UPLOADED = "uploaded"
    REVIEW = "review"
    VALIDATED = "validated"
    ARCHIVED = "archived"
    REJECTED = "rejected"


class EducationLevel(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    SCHOOL = "school"
    CERTIFICATE = "certificate"
    BACHELORS = "bachelors"
    MASTERS = "masters"
    DOCTORAL = "doctoral"


class Enum16(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    RESUMES = "resumes"
    JOB_DESCRIPTIONS = "job_descriptions"


class Enum19(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    RESUMES = "resumes"
    JOB_DESCRIPTIONS = "job_descriptions"


class Get8ItemsItem(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    FILE_NAME = "file_name"
    EXTRACTOR = "extractor"
    CREATED_DT = "created_dt"


class GetResponses200ContentApplicationJsonSchemaResultsItemDocumentType(
    str, Enum, metaclass=CaseInsensitiveEnumMeta
):

    RESUMES = "resumes"
    JOB_DESCRIPTIONS = "job_descriptions"


class InvitationResponseStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    ACCEPTED = "accepted"
    DECLINED = "declined"


class InvitationStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    PENDING = "pending"
    ACCEPTED = "accepted"
    DECLINED = "declined"


class ManagementLevel(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    NONE = "None"
    LOW = "Low"
    MID = "Mid"
    UPPER = "Upper"


class OrganizationRole(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    ADMIN = "admin"
    MEMBER = "member"


class OrganizationUserRole(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The role of the logged in user within the organization."""

    ADMIN = "admin"
    MEMBER = "member"


class PostContentSchemaDocumentType(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    RESUMES = "resumes"
    JOB_DESCRIPTIONS = "job_descriptions"


class Region(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """region - server parameter"""

    API = "api"
    API_EU1 = "api.eu1"


class ResthookEvent(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The event name to subscribe to."""

    RESUME_PARSE_SUCCEEDED = "resume.parse.succeeded"
    RESUME_PARSE_FAILED = "resume.parse.failed"
    RESUME_PARSE_COMPLETED = "resume.parse.completed"
    INVOICE_PARSE_SUCCEEDED = "invoice.parse.succeeded"
    INVOICE_PARSE_FAILED = "invoice.parse.failed"
    INVOICE_PARSE_COMPLETED = "invoice.parse.completed"
    INVOICE_VALIDATE_COMPLETED = "invoice.validate.completed"
    DOCUMENT_PARSE_SUCCEEDED = "document.parse.succeeded"
    DOCUMENT_PARSE_FAILED = "document.parse.failed"
    DOCUMENT_PARSE_COMPLETED = "document.parse.completed"
    DOCUMENT_VALIDATE_COMPLETED = "document.validate.completed"
    DOCUMENT_CLASSIFY_SUCCEEDED = "document.classify.succeeded"
    DOCUMENT_CLASSIFY_FAILED = "document.classify.failed"
    DOCUMENT_CLASSIFY_COMPLETED = "document.classify.completed"


class ResthookSubscriptionVersion(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Version of the resthook subscription. Determines the resthook body being fired."""

    V1 = "v1"
    V2 = "v2"
    V3 = "v3"


class ResumeSearchParametersCustomDataFilterType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Data points of "text" type support only "equals" filterType, others support both "equals" and
    "range"
    """

    EQUALS = "equals"
    RANGE = "range"


class ResumeSkillSourcesItemSection(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    ACHIEVEMENTS = "Achievements"
    ADDITIONAL_INFORMATION = "AdditionalInformation"
    EDUCATION = "Education"
    EXTRACURRICULARS = "Extracurriculars"
    ORGANISATIONS = "Organisations"
    OTHER = "Other"
    PERSONAL_DETAILS = "PersonalDetails"
    PROJECTS = "Projects"
    PUBLICATIONS = "Publications"
    REFEREES = "Referees"
    SKILLS = "Skills"
    SUMMARY = "Summary"
    TRAINING = "Training"
    WORK_EXPERIENCE = "WorkExperience"
    NOT_POPULATED = "NotPopulated"
    HEADER = "Header"
    FOOTER = "Footer"
    SKILLS_INTERESTS_LANGUAGES = "Skills/Interests/Languages"
    TRAINING_CERTIFICATIONS = "Training/Certifications"
    EXTRACURRICULARS_LEADERSHIP = "Extracurriculars/Leadership"


class SearchLocationUnit(str, Enum, metaclass=CaseInsensitiveEnumMeta):

    KM = "km"
    MI = "mi"


class Version(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Version of the resthook subscription. Determines the resthook body being fired."""

    V1 = "v1"
    V2 = "v2"
    V3 = "v3"


class WorkspaceVisibility(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Visibility "organization" means everyone in the organization can access the workspace.
    Visibility "private" means only people explicitly added can access the workspace.
    """

    ORGANIZATION = "organization"
    PRIVATE = "private"
